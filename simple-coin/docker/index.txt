2:"$Sreact.fragment"
3:I[4752,["282","static/chunks/dd507964-94e7a1153960be03.js","533","static/chunks/b706f4b1-2831010e2dd2a749.js","692","static/chunks/73dfd616-512978e649b76761.js","963","static/chunks/963-4dffbac8d6a25e78.js","679","static/chunks/679-d1a6a81af7b7551a.js","177","static/chunks/app/layout-eb3ccd7f5c20da6c.js"],"SidebarProvider"]
4:I[9474,["282","static/chunks/dd507964-94e7a1153960be03.js","533","static/chunks/b706f4b1-2831010e2dd2a749.js","692","static/chunks/73dfd616-512978e649b76761.js","963","static/chunks/963-4dffbac8d6a25e78.js","679","static/chunks/679-d1a6a81af7b7551a.js","177","static/chunks/app/layout-eb3ccd7f5c20da6c.js"],"default"]
5:I[622,["282","static/chunks/dd507964-94e7a1153960be03.js","533","static/chunks/b706f4b1-2831010e2dd2a749.js","692","static/chunks/73dfd616-512978e649b76761.js","963","static/chunks/963-4dffbac8d6a25e78.js","679","static/chunks/679-d1a6a81af7b7551a.js","177","static/chunks/app/layout-eb3ccd7f5c20da6c.js"],"default"]
6:I[4752,["282","static/chunks/dd507964-94e7a1153960be03.js","533","static/chunks/b706f4b1-2831010e2dd2a749.js","692","static/chunks/73dfd616-512978e649b76761.js","963","static/chunks/963-4dffbac8d6a25e78.js","679","static/chunks/679-d1a6a81af7b7551a.js","177","static/chunks/app/layout-eb3ccd7f5c20da6c.js"],"Main"]
7:I[7059,[],""]
8:I[3333,["39","static/chunks/app/error-b5faafca2308edb7.js"],"default"]
9:I[646,[],""]
b:I[3713,[],"OutletBoundary"]
d:I[3713,[],"MetadataBoundary"]
f:I[3713,[],"ViewportBoundary"]
11:I[9359,[],""]
1:HL["/_next/static/css/aa5c0cfdd8dfd8bd.css","style"]
0:{"P":null,"b":"Yf5GZIQzHMcvX3HNUihRz","p":"","c":["","simple-coin","docker",""],"i":false,"f":[[["",{"children":["simple-coin",{"children":[["id","docker","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$2","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/aa5c0cfdd8dfd8bd.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ko","className":"__className_fde3a9 size-full","children":["$","body",null,{"className":"relative size-full","children":["$","$L3",null,{"children":[["$","header",null,{"className":"fixed top-0 z-50 flex h-12 w-full items-center border-gray-200 bg-white/95 pl-10 backdrop-blur-sm","children":["$","$L4",null,{"children":["$","span",null,{"children":"JongMin Chae"}]}]}],["$","$L5",null,{}],["$","$L6",null,{"className":"overflow-x-hidden pt-12","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$8","errorStyles":[],"errorScripts":[],"template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]]}]}]}]]}],{"children":["simple-coin",["$","$2","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","simple-coin","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":[["id","docker","d"],["$","$2","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","simple-coin","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$2","c",{"children":["$La",null,["$","$Lb",null,{"children":"$Lc"}]]}],{},null]},null]},null]},null],["$","$2","h",{"children":[null,["$","$2","DRtT-fPpV3llDI4LEbjL6",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","$Lf",null,{"children":"$L10"}],null]}]]}]]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
12:I[4963,["963","static/chunks/963-4dffbac8d6a25e78.js","713","static/chunks/app/simple-coin/%5Bid%5D/page-180348f7e7a038cd.js"],""]
13:I[4931,["963","static/chunks/963-4dffbac8d6a25e78.js","713","static/chunks/app/simple-coin/%5Bid%5D/page-180348f7e7a038cd.js"],"default"]
a:[["$","div",null,{"className":"mx-auto max-w-6xl p-8","children":[["$","article",null,{"className":"prose !max-w-full","children":[["$","h1",null,{"children":"Simple Docker"}],"\n",["$","p",null,{"children":"블록체인 네트워크가 잘 동작하는지 확인하기 위해서는 여러 노드가 필요합니다.\r\n노드가 서로 거래를 잘 주고 받는지, 블록체인과 mempool이 잘 동기화 되는지 확인해야 합니다.\r\n혼자서도 실험할 수 있도록 도커(Docker)를 사용해 3개의 node를 띄워보겠습니다."}],"\n",["$","img",null,{"width":"","height":"","alt":"image","src":"https://github.com/user-attachments/assets/ed55b633-2b26-4149-8b14-b7a69d517e99"}],"\n",["$","h2",null,{"children":"도커란?"}],"\n",["$","p",null,{"children":"도커(Docker)는 애플리케이션을 컨테이너(container)라는 독립된 실행 환경에 올려서 실행할 수 있게 해주는 플랫폼입니다.\r\n컨테이너는 가상의 운영체제를 띄우는 방식인 가상 머신(VM) 과는 다르게, 호스트 OS 위에서 격리된 공간을 제공하기 때문에 가볍고 빠릅니다."}],"\n",["$","p",null,{"children":"즉, 도커를 사용하면 “내 컴퓨터에서는 잘 되는데 서버에서는 안 돼요” 같은 문제가 줄어듭니다.\r\n왜냐하면 실행 환경(OS, 라이브러리, 설정)을 그대로 컨테이너 안에 담아 어디서든 똑같이 실행할 수 있기 때문입니다."}],"\n",["$","h3",null,{"children":"장점"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"실행 환경을 코드로 관리할 수 있음 (Dockerfile)"}],"\n",["$","li",null,{"children":"동일한 환경을 손쉽게 복제 가능"}],"\n",["$","li",null,{"children":"배포 및 확장이 간편"}],"\n"]}],"\n",["$","h2",null,{"children":"도커 설치하는 법"}],"\n",["$","p",null,{"children":["도커는 운영체제마다 설치 방법이 다르지만, 일반적으로 ",["$","a",null,{"href":"https://www.docker.com/products/docker-desktop/","children":"Docker Desktop"}]," 을 설치하는 방식이 가장 쉽습니다."]}],"\n",["$","p",null,{"children":"설치가 완료되면 아래 명령어로 정상 동작 여부를 확인할 수 있습니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker --version\n"}]}],"\n",["$","h2",null,{"children":"docker-compose란?"}],"\n",["$","p",null,{"children":["여러 개의 컨테이너를 동시에 띄우고 관리하기 위해서는 ",["$","strong",null,{"children":"docker-compose"}]," 를 사용합니다.\r\n",["$","code",null,{"children":"docker-compose.yml"}]," 파일에 각 컨테이너(서비스)의 이미지, 포트, 볼륨, 네트워크 설정을 정의해두면,\r\n아래와 같이 한 줄 명령어로 여러 개의 컨테이너를 동시에 실행할 수 있습니다."]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker-compose up\n"}]}],"\n",["$","p",null,{"children":["예를 들어 블록체인 노드를 3개 띄우려면, ",["$","code",null,{"children":"docker-compose.yml"}]," 에 노드 1, 노드 2, 노드 3을 각각 서비스로 정의하고\r\n",["$","code",null,{"children":"docker-compose up"}]," 을 실행하면 자동으로 컨테이너 3개가 실행됩니다."]}],"\n",["$","h2",null,{"children":"Dockerfile"}],"\n",["$","p",null,{"children":"Dockerfile은 블록체인 노드 하나를 실행할 수 있는 컨테이너 이미지를 만드는 역할을 합니다. 모든 노드가 이 이미지를 공유하고, 환경 변수(HTTP_PORT, P2P_PORT, PEERS)로 개별 설정만 바꿔서 실행됩니다."}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-docker","children":"FROM node:18-alpine        # Node.js 18 버전의 가벼운 alpine 이미지 기반으로 컨테이너 생성\r\n\r\nWORKDIR /app               # 컨테이너 내부 작업 디렉토리 설정\r\n\r\nCOPY package*.json ./      # package.json, package-lock.json 복사\r\nRUN npm ci                 # lock 파일 기준으로 패키지 설치 (더 안정적)\r\n\r\nCOPY src/ ./src/           # 소스 코드 복사\r\nCOPY tsconfig.json ./      # 타입스크립트 설정 복사\r\nCOPY public/ ./public/     # public 폴더 복사 (정적 파일)\r\n\r\nRUN npm run build          # 빌드 (ts → js 변환)\r\nEXPOSE 3001 6001           # HTTP 서버(3001)와 P2P 서버(6001) 포트 오픈\r\n\r\nCMD [\"node\", \"dist/main.js\"]  # 컨테이너 시작 시 실행할 명령어\r\n\r\n\n"}]}],"\n",["$","h2",null,{"children":"docker-compose.yml"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-yml","children":"services:\r\n  node1:\r\n    build: . # 현재 디렉토리의 Dockerfile로 빌드\r\n    ports:\r\n      - '3001:3001' # 호스트 3001 → 컨테이너 3001 (HTTP API)\r\n      - '6001:6001' # 호스트 6001 → 컨테이너 6001 (P2P 통신)\r\n    environment:\r\n      - HTTP_PORT=3001\r\n      - P2P_PORT=6001\r\n\r\n  node2:\r\n    build: .\r\n    ports:\r\n      - '3002:3001' # 외부에서는 3002번으로 접근 가능 (내부는 3001)\r\n      - '6002:6001'\r\n    environment:\r\n      - HTTP_PORT=3001\r\n      - P2P_PORT=6001\r\n      - PEERS=ws://node1:6001 # node1과 연결\r\n    depends_on:\r\n      - node1 # node1 실행 후 시작\r\n\r\n  node3:\r\n    build: .\r\n    ports:\r\n      - '3003:3001'\r\n      - '6003:6001'\r\n    environment:\r\n      - HTTP_PORT=3001\r\n      - P2P_PORT=6001\r\n      - PEERS=ws://node2:6001 # node2와 연결\r\n    depends_on:\r\n      - node2\n"}]}],"\n",["$","h2",null,{"children":"실행"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-bash","children":"docker-compose up\n"}]}],"\n",["$","p",null,{"children":["http://localhost:3001 -> node1",["$","br",null,{}],"\n","http://localhost:3002 -> node2",["$","br",null,{}],"\n","http://localhost:3003 -> node3"]}],"\n",["$","p",null,{"children":"각각의 노드가 잘 동기화되는지, 거래를 주고 받는지 확인해 보세요."}],"\n",["$","h2",null,{"children":"마무리"}],"\n",["$","p",null,{"children":["simple coin이라는 간단한 암호화폐를 제작해 보았습니다.",["$","br",null,{}],"\n","블록체인, 작업증명, 트랜잭션, mempool,지갑의 개념을 배웠습니다.",["$","br",null,{}],"\n","탈중앙화 되었으며 투명하고 저렴한 암호화폐의 가치를 믿습니다.",["$","br",null,{}],"\n","오너라~ 암호화폐의 시대야!"]}]]}],["$","div",null,{"className":"mt-12 flex items-center justify-between border-t pt-8","children":[["$","$L12",null,{"href":"/simple-coin/spa","className":"flex items-center gap-2 rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-50","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-chevron-left size-4","children":[["$","path","1wnfg3",{"d":"m15 18-6-6 6-6"}],"$undefined"]}],"이전 아티클"]}],["$","div",null,{"className":"text-sm text-gray-500","children":[8," / ",8]}],["$","div",null,{"className":"w-32"}]]}]]}],["$","$L13",null,{}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"블록체인 & 암호화폐 원리와 simple coin 구현 가이드 | JongMin Chae"}],["$","meta","2",{"name":"description","content":"JongMin Chae 개인 블록"}],["$","link","3",{"rel":"icon","href":"/images/spyglass.png"}]]
c:null
