2:"$Sreact.fragment"
3:I[4752,["282","static/chunks/dd507964-94e7a1153960be03.js","533","static/chunks/b706f4b1-2831010e2dd2a749.js","692","static/chunks/73dfd616-512978e649b76761.js","963","static/chunks/963-4dffbac8d6a25e78.js","679","static/chunks/679-d1a6a81af7b7551a.js","177","static/chunks/app/layout-725688826163538f.js"],"SidebarProvider"]
4:I[9474,["282","static/chunks/dd507964-94e7a1153960be03.js","533","static/chunks/b706f4b1-2831010e2dd2a749.js","692","static/chunks/73dfd616-512978e649b76761.js","963","static/chunks/963-4dffbac8d6a25e78.js","679","static/chunks/679-d1a6a81af7b7551a.js","177","static/chunks/app/layout-725688826163538f.js"],"default"]
5:I[622,["282","static/chunks/dd507964-94e7a1153960be03.js","533","static/chunks/b706f4b1-2831010e2dd2a749.js","692","static/chunks/73dfd616-512978e649b76761.js","963","static/chunks/963-4dffbac8d6a25e78.js","679","static/chunks/679-d1a6a81af7b7551a.js","177","static/chunks/app/layout-725688826163538f.js"],"default"]
6:I[4752,["282","static/chunks/dd507964-94e7a1153960be03.js","533","static/chunks/b706f4b1-2831010e2dd2a749.js","692","static/chunks/73dfd616-512978e649b76761.js","963","static/chunks/963-4dffbac8d6a25e78.js","679","static/chunks/679-d1a6a81af7b7551a.js","177","static/chunks/app/layout-725688826163538f.js"],"Main"]
7:I[7059,[],""]
8:I[3333,["39","static/chunks/app/error-b5faafca2308edb7.js"],"default"]
9:I[646,[],""]
b:I[3713,[],"OutletBoundary"]
d:I[3713,[],"MetadataBoundary"]
f:I[3713,[],"ViewportBoundary"]
11:I[9359,[],""]
1:HL["/_next/static/css/2e677674121e02c0.css","style"]
0:{"P":null,"b":"gfNoNQW0gEMWLFXPuxaxo","p":"","c":["","simple-coin","spa",""],"i":false,"f":[[["",{"children":["simple-coin",{"children":[["id","spa","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$2","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2e677674121e02c0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"ko","className":"__className_fde3a9 size-full","children":["$","body",null,{"className":"relative size-full","children":["$","$L3",null,{"children":[["$","header",null,{"className":"fixed top-0 z-50 flex h-12 w-full items-center border-gray-200 bg-white/95 pl-10 backdrop-blur-sm","children":["$","$L4",null,{"children":["$","span",null,{"children":"JongMin Chae"}]}]}],["$","$L5",null,{}],["$","$L6",null,{"className":"overflow-x-hidden pt-12","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$8","errorStyles":[],"errorScripts":[],"template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]]}]}]}]]}],{"children":["simple-coin",["$","$2","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","simple-coin","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":[["id","spa","d"],["$","$2","c",{"children":[null,["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","simple-coin","children","$0:f:0:1:2:children:2:children:0","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L9",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]]}],{"children":["__PAGE__",["$","$2","c",{"children":["$La",null,["$","$Lb",null,{"children":"$Lc"}]]}],{},null]},null]},null]},null],["$","$2","h",{"children":[null,["$","$2","Zy-p_oxrgg4HjvG5oJ5w1",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","$Lf",null,{"children":"$L10"}],null]}]]}]]],"m":"$undefined","G":["$11","$undefined"],"s":false,"S":true}
12:I[4963,["963","static/chunks/963-4dffbac8d6a25e78.js","713","static/chunks/app/simple-coin/%5Bid%5D/page-180348f7e7a038cd.js"],""]
13:I[4931,["963","static/chunks/963-4dffbac8d6a25e78.js","713","static/chunks/app/simple-coin/%5Bid%5D/page-180348f7e7a038cd.js"],"default"]
a:[["$","div",null,{"className":"mx-auto max-w-6xl p-8","children":[["$","article",null,{"className":"prose !max-w-full","children":[["$","h1",null,{"children":"간단한 SPA 웹페이지 구현"}],"\n",["$","p",null,{"children":"블록체인 네트워크의 상태를 실시간으로 확인할 수 있는 웹 인터페이스입니다."}],"\n",["$","h2",null,{"children":"SPA 아키텍처"}],"\n",["$","p",null,{"children":"Single Page Application의 기본 구조:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"function BlockchainDashboard() {\r\n  const [blocks, setBlocks] = useState([])\r\n  const [transactions, setTransactions] = useState([])\r\n  const [networkStats, setNetworkStats] = useState({})\r\n\r\n  useEffect(() => {\r\n    fetchBlockchainData()\r\n    const interval = setInterval(fetchBlockchainData, 10000) // 10초마다 갱신\r\n    return () => clearInterval(interval)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Header />\r\n      <NetworkStats stats={networkStats} />\r\n      <BlockList blocks={blocks} />\r\n      <TransactionList transactions={transactions} />\r\n    </div>\r\n  )\r\n}\n"}]}],"\n",["$","h2",null,{"children":"실시간 데이터 관리"}],"\n",["$","p",null,{"children":"WebSocket을 활용한 실시간 데이터 업데이트:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"useEffect(() => {\r\n  const ws = new WebSocket('ws://localhost:8080')\r\n\r\n  ws.onmessage = (event) => {\r\n    const data = JSON.parse(event.data)\r\n    if (data.type === 'new_block') {\r\n      setBlocks((prev) => [data.block, ...prev])\r\n    } else if (data.type === 'new_transaction') {\r\n      setTransactions((prev) => [data.transaction, ...prev])\r\n    }\r\n  }\r\n\r\n  return () => ws.close()\r\n}, [])\n"}]}],"\n",["$","h2",null,{"children":"컴포넌트 구조"}],"\n",["$","h3",null,{"children":"네트워크 통계 컴포넌트"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"function NetworkStats({ stats }) {\r\n  return (\r\n    <div className=\"stats-grid\">\r\n      <StatCard title=\"블록 높이\" value={stats.blockHeight} />\r\n      <StatCard title=\"총 트랜잭션\" value={stats.totalTransactions} />\r\n      <StatCard title=\"네트워크 해시레이트\" value={stats.hashRate} />\r\n      <StatCard title=\"연결된 노드\" value={stats.connectedNodes} />\r\n    </div>\r\n  )\r\n}\n"}]}],"\n",["$","h3",null,{"children":"블록 리스트 컴포넌트"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"function BlockList({ blocks }) {\r\n  return (\r\n    <div className=\"block-list\">\r\n      <h3>최근 블록들</h3>\r\n      {blocks.map((block) => (\r\n        <BlockCard key={block.hash} block={block} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\n"}]}],"\n",["$","h3",null,{"children":"트랜잭션 리스트 컴포넌트"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"function TransactionList({ transactions }) {\r\n  return (\r\n    <div className=\"transaction-list\">\r\n      <h3>최근 트랜잭션들</h3>\r\n      {transactions.map((tx) => (\r\n        <TransactionCard key={tx.id} transaction={tx} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\n"}]}],"\n",["$","h2",null,{"children":"상태 관리"}],"\n",["$","p",null,{"children":"React의 useReducer를 활용한 복잡한 상태 관리:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"const initialState = {\r\n  blocks: [],\r\n  transactions: [],\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nfunction blockchainReducer(state, action) {\r\n  switch (action.type) {\r\n    case 'FETCH_START':\r\n      return { ...state, loading: true }\r\n    case 'FETCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        blocks: action.payload.blocks,\r\n        transactions: action.payload.transactions,\r\n      }\r\n    case 'FETCH_ERROR':\r\n      return { ...state, loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\n"}]}],"\n",["$","h2",null,{"children":"사용자 인터랙션"}],"\n",["$","h3",null,{"children":"트랜잭션 생성 폼"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-javascript","children":"function TransactionForm({ onSubmit }) {\r\n  const [formData, setFormData] = useState({\r\n    toAddress: '',\r\n    amount: '',\r\n    fee: '',\r\n  })\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    onSubmit(formData)\r\n    setFormData({ toAddress: '', amount: '', fee: '' })\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"받는 주소\"\r\n        value={formData.toAddress}\r\n        onChange={(e) =>\r\n          setFormData({ ...formData, toAddress: e.target.value })\r\n        }\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"금액\"\r\n        value={formData.amount}\r\n        onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n      />\r\n      <button type=\"submit\">트랜잭션 전송</button>\r\n    </form>\r\n  )\r\n}\n"}]}],"\n",["$","h2",null,{"children":"반응형 디자인"}],"\n",["$","p",null,{"children":"모든 디바이스에서 잘 작동하는 반응형 UI:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-css","children":".dashboard {\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  gap: 1rem;\r\n  padding: 1rem;\r\n}\r\n\r\n@media (min-width: 768px) {\r\n  .dashboard {\r\n    grid-template-columns: 1fr 2fr;\r\n  }\r\n}\r\n\r\n.stats-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 1rem;\r\n}\n"}]}],"\n",["$","h2",null,{"children":"성능 최적화"}],"\n",["$","p",null,{"children":"대용량 데이터를 효율적으로 처리하기 위한 최적화:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"가상화"}],": 긴 리스트를 위한 react-window 사용"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"메모이제이션"}],": React.memo와 useMemo 활용"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"코드 스플리팅"}],": 라우트별 코드 분할"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"지연 로딩"}],": 컴포넌트 지연 로딩"]}],"\n"]}]]}],["$","div",null,{"className":"mt-12 flex items-center justify-between border-t pt-8","children":[["$","$L12",null,{"href":"/simple-coin/mempool","className":"flex items-center gap-2 rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 transition-colors hover:bg-gray-50","children":[["$","svg",null,{"ref":"$undefined","xmlns":"http://www.w3.org/2000/svg","width":24,"height":24,"viewBox":"0 0 24 24","fill":"none","stroke":"currentColor","strokeWidth":2,"strokeLinecap":"round","strokeLinejoin":"round","className":"lucide lucide-chevron-left size-4","children":[["$","path","1wnfg3",{"d":"m15 18-6-6 6-6"}],"$undefined"]}],"이전 아티클"]}],["$","div",null,{"className":"text-sm text-gray-500","children":[7," / ",7]}],["$","div",null,{"className":"w-32"}]]}]]}],["$","$L13",null,{}]]
10:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
e:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"블록체인 & 암호화폐 원리와 simple coin 구현 가이드 | JongMin Chae"}],["$","meta","2",{"name":"description","content":"JongMin Chae 개인 블록"}],["$","link","3",{"rel":"icon","href":"/images/spyglass.png"}]]
c:null
